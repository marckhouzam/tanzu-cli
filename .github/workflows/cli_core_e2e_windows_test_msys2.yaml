name: Windows-MSYS2

on:
  pull_request:
    branches: [main, release-*]
  push:
    branches: [main, test*, release-*]

jobs:
  build:
    name: MSYS2 Tanzu CLI Core E2E Tests on Windows
    runs-on: windows-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - name: Set TOPLEVEL_DIR environment variable
        run: echo "TOPLEVEL_DIR=$(git rev-parse --show-toplevel)" >> $GITHUB_ENV
        shell: bash

      - name: Verify Docker Desktop is running
        run: |
          docker --version
          docker-compose --version
          # Add additional steps as needed

      - name: Set up Go 1.x
        uses: actions/setup-go@v3
        with:
          go-version: '1.21'  # Ensure version is a string
        id: go

      - name: go cache
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ steps.go.outputs.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ steps.go.outputs.go-version }}-

      - name: Install MSYS2
        run: choco install msys2
        shell: powershell

      - name: Initialize MSYS2
        run: C:\tools\msys64\usr\bin\bash -lc "echo 'Hello from MSYS2'"
        shell: powershell

      - name: Install Make in MSYS2
        run: |
          C:\tools\msys64\usr\bin\bash -lc "pacman -S make --noconfirm"
          C:\tools\msys64\usr\bin\bash -lc "pacman -S unzip --noconfirm"
        shell: powershell

      - name: Run Unix Commands in MSYS2
        run: |
          C:\tools\msys64\usr\bin\bash -lc "echo 'Hello from MSYS2'"
          C:\tools\msys64\usr\bin\bash -lc "ls"
          C:\tools\msys64\usr\bin\bash -lc "pwd"
          C:\tools\msys64\usr\bin\bash -lc "go version"
        shell: powershell

      - name: Setup dependencies
        run: |
          topLevel=$(git rev-parse --show-toplevel)
          echo "Top level: $topLevel"
          
          C:/tools/msys64/usr/bin/bash -lc "cd '$topLevel' && make tools"
        shell: powershell
      
